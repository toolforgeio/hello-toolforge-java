<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.toolforge</groupId>
    <artifactId>hello-toolforge</artifactId>
    <version>0.0.0-SNAPSHOT</version>
    <name>hello-toolforge</name>
    <inceptionYear>2022</inceptionYear>
    <description>Example ToolForge tool using Java</description>
    <url>https://github.com/toolforgeio/hello-toolforge-java</url>
    <packaging>jar</packaging>
    <scm>
        <connection>scm:git:ssh://git@github.com/toolforgeio/hello-toolforge-java.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/toolforgeio/hello-toolforge-java.git</developerConnection>
        <url>https://github.com/toolforgeio/hello-toolforge-java/tree/main</url>
    </scm>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <discourse.version>0.0.2</discourse.version>
        <slf4j.version>2.0.6</slf4j.version>
        <toolforge4j.version>0.0.0</toolforge4j.version>
        <guava.version>31.1-jre</guava.version>
        <hamcrest.version>1.3</hamcrest.version>
        <junit.version>4.13.2</junit.version>
    </properties>
    <build>
        <!-- This sets the name of the output JAR file. -->
        <finalName>${project.name}</finalName>
        <plugins>
            <!--
              We're using Java 17, which is the latest LTS at the time of this
              writing. Users can use whatever version they like!
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            
            <!--
              Make sure the Configuration class generated from the manifest
              file is included in the build.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!--
              Create an uber JAR with our tool as the main class, making sure
              to preserve service locator files, manifests, etc.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>module-info.class</exclude>
                                <exclude>META-INF/versions/*/module-info.class</exclude>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>io.toolforge.tool.hello.App</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!--
              Build our ToolForge docker container as part of our Maven build.
            -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.40.2</version>
                <executions>
                    <execution>
                        <id>docker-build</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <images>
                        <image>
                            <name>docker.toolforge.io/toolforgeio/hello-toolforge</name>
                        </image>
                    </images>
                </configuration>
            </plugin>
            
            <!--
              Generate Configuration code from our manifest.
            -->
            <plugin>
                <groupId>io.toolforge</groupId>
                <artifactId>toolforge-maven-plugin</artifactId>
                <version>0.0.3</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>configuration</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources</outputDirectory>
                            <outputPackage>io.toolforge.tool.hello</outputPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <!--
          Our generated Configuration class uses the excellent discourse
          library ("Civilized arguments for Java" to parse program arguments.
        -->
        <dependency>
            <groupId>com.sigpwned</groupId>
            <artifactId>discourse-core</artifactId>
            <version>${discourse.version}</version>
        </dependency>

        <!-- This support library assists with building ToolForge tools. -->
        <dependency>
            <groupId>io.toolforge</groupId>
            <artifactId>toolforge4j</artifactId>
            <version>${toolforge4j.version}</version>
        </dependency>
        
        <!--
          Redirect any logs to STDOUT.
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        
        <!-- Testing, testing, and more testing. -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
